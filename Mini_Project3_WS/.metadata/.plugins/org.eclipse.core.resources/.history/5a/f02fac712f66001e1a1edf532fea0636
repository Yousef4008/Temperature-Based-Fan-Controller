/*
 * adc.c
 *
 *  Created on: Oct 6, 2023
 *      Author: Youssif Hossam
 */

#include "adc.h"
#include "../../LIB/common_macros.h" /* To use the macros like SET_BIT */
#include <avr/io.h> /* To use the IO Ports Registers */
#include <util/delay.h>

float32 ADC_RefVoltValue;

void ADC_init(const ADC_ConfigType * Config_Ptr){

	switch(Config_Ptr->ref_volt){
	case 1:
		ADC_RefVoltValue = 5;
		break;

	case 3:
		ADC_RefVoltValue = 2.56;
		break
	}
	ADC_RefVoltValue  = Config_Ptr->ref_volt;

	ADMUX = (ADMUX & 0x3F) | ((Config_Ptr->ref_volt)<<6);

	ADCSRA = (1<<ADEN) ;

	ADCSRA = (ADCSRA & 0xF8) | (Config_Ptr->prescaler);

}

uint16 ADC_readChannel(uint8 ch_num){

	ADMUX = (ADMUX & 0xE0)|(ch_num & 0x1F);

	SET_BIT(ADCSRA , ADSC);

	while(BIT_IS_CLEAR(ADCSRA,ADIF));

	SET_BIT(ADCSRA,ADIF);

	return ADC;
}
